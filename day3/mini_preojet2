#include <stdio.h>
#include <string.h>

typedef struct {
    char name[20];
    char nmr_tel[20];
    char email[30];
} contact;

int main() {
    
    int i, x, rp, cnt = 0, j, k, trv;
    char cntc_chrch[20];
    char nvl_nmr[20];
    char nvl_eml[30];
    contact contacts[100];
    
    do {
        printf("\n########  Menu  ############\n");
        printf("1 => Ajouter un contact. \n");
        printf("2 => Modifier un contact. \n");
        printf("3 => Supprimer un contact.\n");
        printf("4 => Afficher tous les contacts.\n");
        printf("5 => Rechercher un contact.\n");
        scanf("%d", &x);
         
        switch (x) {
            case 1: 
                printf("Entrer le nom : ");
                scanf(" %[^\n]", contacts[cnt].name);
                
                printf("Entrer votre numero de telephone (10 caracteres) : ");
                scanf(" %[^\n]", contacts[cnt].nmr_tel);
                
                printf("Entrer votre adresse e-mail : ");
                scanf(" %[^\n]", contacts[cnt].email);
                
                cnt++;
                printf("Le contact est ajouté avec succès.\n");
                break;

            case 2: 
                trv = 0;
                printf("Entrer le nom du contact à modifier : ");
                scanf(" %[^\n]", cntc_chrch);
                
                for (j = 0; j < cnt; j++) {
                    if (strcmp(contacts[j].name, cntc_chrch) == 0) {
                        trv = 1;
                        printf("Entrer le nouveau numero de telephone (10 caracteres) : ");
                        scanf(" %[^\n]", nvl_nmr);
                        
                        printf("Entrer la nouvelle adresse e-mail : ");
                        scanf(" %[^\n]", nvl_eml);
                        
                        strcpy(contacts[j].nmr_tel, nvl_nmr);
                        strcpy(contacts[j].email, nvl_eml);
                        
                        printf("Le contact est modifié avec succès.\n");
                    }
                }
                if (trv == 0) {
                    printf("Le contact n'existe pas.\n");
                }
                break;
            
            case 3: 
                trv = 0;
                printf("Entrer le nom du contact à supprimer : ");
                scanf(" %[^\n]", cntc_chrch);
            
                for (j = 0; j < cnt; j++) {
                    if (strcmp(contacts[j].name, cntc_chrch) == 0) {
                        trv = 1;
                        for (i = j; i < cnt - 1; i++) {
                            contacts[i] = contacts[i+1];
                        }
                        cnt--;
                        printf("Le contact est supprimé avec succès.\n");
                        break;
                    }
                }
                if (trv == 0) {
                    printf("Le contact n'existe pas.\n");
                }
                break;

            case 4: 
                if (cnt != 0) {
                    for (k = 0; k < cnt; k++) {
                        printf("Contact %d => Nom : %s | Tel : %s | Email : %s\n", k+1, contacts[k].name, contacts[k].nmr_tel, contacts[k].email);
                    }
                } else {
                    printf("La liste de contacts est vide.\n");
                }
                break;
            
            case 5: 
                trv = 0;
                printf("Entrer le nom du contact à rechercher : ");
                scanf(" %[^\n]", cntc_chrch);
                
                for (j = 0; j < cnt; j++) {
                    if (strcmp(contacts[j].name, cntc_chrch) == 0) {
                        trv = 1;
                        printf("Contact trouvé => Nom : %s | Tel : %s | Email : %s\n", contacts[j].name, contacts[j].nmr_tel, contacts[j].email);
                    }
                }
                if (trv == 0) {
                    printf("Le contact n'existe pas dans la liste.\n");
                }
                break;

            default:
                printf("Choix invalide.\n");
        }

        printf("\nAfficher le menu ? (1=Oui / 0=Non) : ");
        scanf("%d", &rp);

    } while (rp == 1);

    return 0;
}
